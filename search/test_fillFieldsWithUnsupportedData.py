# Generated by Selenium IDE
import pytest
from time import sleep
import json
from selenium import webdriver
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestFillFieldsWithUnsupportedDataUnsuccesfully():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_fillFieldsWithUnsupportedDataUnsuccesfully(self):
    self.driver.get("http://localhost:4200/customer")
    self.driver.set_window_size(1532, 818)
    sleep(2)
    self.driver.find_element(By.ID, "customerId").send_keys("deneme1")
    sleep(1)
    self.driver.find_element(By.ID, "nationalityId").send_keys("deneme2")
    sleep(1)
    self.driver.find_element(By.ID, "accountNo").send_keys("deneme3")
    sleep(1)
    self.driver.find_element(By.ID, "contactData").send_keys("deneme4")
    sleep(1)
    self.driver.find_element(By.ID, "firstName").send_keys("456123")
    sleep(1)
    self.driver.find_element(By.ID, "lastName").send_keys("123456")
    sleep(1)
    self.driver.find_element(By.ID, "orderNumber").send_keys("deneme5")
    errorMessage = self.driver.find_element(By.XPATH, "/html/body/app-root/app-customer/app-admin-layout/div/div[2]/app-customer-list/div/div/div[1]/form/ul/li[5]/div/div/div")
    assert errorMessage.text == "Invalid or insufficient input, please check"